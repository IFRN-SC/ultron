/*
 * $Id$
*/

#include "HTSMUX-driver.h"

task main (){

     // configurar as portas para o sensor de distancia   
     SetSensor(S1, SENSOR_LOWSPEED);

     //SetSensorType(IN_2, SENSOR_TYPE_COLORGREEN);
     //SetSensorType(IN_3, SENSOR_TYPE_COLORGREEN);
     //SetSensorType(IN_4, SENSOR_TYPE_LOWSPEED);

     // setar o multiplexador
     if (!HTSMUXscanPorts(S1)){
         TextOut(0, 0, "Scan failed!");
         Wait(10);
     }
  
     
                /********** PARTE DO DOCUMENTO ***********
                 * The sensor in this example is a LEGO Ultra Sound sensor connected
                 * to the SMUX's 1st port (msensor_S1_1).
                 * SMUX sensor ports use the following naming standard:
                 * If the SMUX is connected to the NXT's S1 port, it starts with msensors_S1.
                 * If the SMUX were to be connected to the S2 port, it would start with msensors_S2
                  
 		 * The second part denotes the SMUX's port, which it has 4 of.
  		 * If the sensor was connected to the SMUX port 1 and the SMUX was connected to
  		 * the NXT's S1 port, the smuxport would be written as msensor_S1_1.
  		 * If the sensor was connected to the SMUX port 3 with the SMUX still connected
                 * to S1, it would be written as msensor_S1_3 
                 */
 
 
    // smuxSetSensorLegoLight(msensor_S1_4,true); // :: retorna um booleano
    // smuxSetSensorLegoLight(msensor_S1_3,true); // :: retorna um booleano

    //smuxSensorLegoUS(msensor_S1_3);  :: RETORNA O VALOR DO SONAR E CM
    //smuxSensorLegoUS(msensor_S1_4);  :: RETORNA O VALOR DO SONAR E CM



    while (true) {

        // configurar o robo para 4 sensores de luz
        int maisEsq = smuxSensorLegoLightNorm(msensor_S1_1);  
        int esq = smuxSensorLegoLightNorm(msensor_S1_2); 
        int dir = smuxSensorLegoLightNorm(msensor_S1_3); 
        int maisDir = smuxSensorLegoLightNorm(msensor_S1_4); 


        // mostar valores dos sensores na tela 
        TextOut(0, LCD_LINE5, "+Esq: ", false);
        NumOut(30, LCD_LINE5, maisEsq);

        TextOut(0, LCD_LINE4, " Esq: ", false);    
        NumOut(30, LCD_LINE4, esq);
  
        TextOut(0, LCD_LINE3, " Dir: ", false);
        NumOut(30, LCD_LINE3, dir);

        TextOut(0, LCD_LINE2, "+Dir", false);
        NumOut(30, LCD_LINE2, maisDir);
    }  
}

/*
 * $Id$
*/

