/************************************************************************/
/*                                                                      */
/* Program Name: LL-print.nxc */
/* =============================                                        */
/*                                                                      */
/* Copyright (c) 2008 by mindsensors.com                                */
/* Email: info (<at>) mindsensors (<dot>) com                           */
/*                                                                      */
/* This program is free software. You can redistribute it and/or modify */
/* it under the terms of the GNU General Public License as published by */
/* the Free Software Foundation; version 3 of the License.              */
/* Read the license at: http://www.gnu.org/licenses/gpl.txt             */
/*                                                                      */
/************************************************************************/
/*
 * When        Who             Comments
 * 03/16/09    Deepak Patil    Initial authoring.
 */

const byte SensorPort  =  IN_1;
#define ADDR     0x02
#include "LL-lib.nxc"

task main ()
{

  string msg;
  string x;
	int s, i;
	char steering, result;
	int a_speed, b_speed;

  byte message[];
  unsigned byte buf[20];
  int count, l;
  byte nByteReady = 0;

  SetSensorLowspeed(SensorPort);

	while (true) {
		Wait(100);

		msg = "  kp   ki   kd ";
		TextOut(0, LCD_LINE1, msg, false);
		msg = "v ";
		s = LL_Read(SensorPort, ADDR, LL_VALUE_KP);
		msg += NumToStr(s);
		msg += "   ";
		s = LL_Read(SensorPort, ADDR, LL_VALUE_KI);
		msg += NumToStr(s);
		msg += "   ";
		s = LL_Read(SensorPort, ADDR, LL_VALUE_KD);
		msg += NumToStr(s);
		msg += "   ";
		TextOut(0, LCD_LINE2, msg, false);

		msg = "f ";
		s = LL_Read(SensorPort, ADDR, LL_FACTOR_KP);
		msg += NumToStr(s);
		msg += "   ";
		s = LL_Read(SensorPort, ADDR, LL_FACTOR_KI);
		msg += NumToStr(s);
		msg += "   ";
		s = LL_Read(SensorPort, ADDR, LL_FACTOR_KD);
		msg += NumToStr(s);
		msg += "   ";
		TextOut(0, LCD_LINE3, msg, false);

		s = LL_Read(SensorPort, ADDR, LL_VALUE_SETPOINT);
		msg = "setpoint: ";
		msg += NumToStr(s);
		msg += "  ";
		TextOut(0, LCD_LINE4, msg, false);

		s = LL_Read(SensorPort, ADDR, LL_READ_STEERING);
		msg = "steering: ";
		msg += NumToStr(s);
		msg += "  ";
		TextOut(0, LCD_LINE5, msg, false);

		s = LL_Read(SensorPort, ADDR, LL_READ_AVERAGE);
		msg = "average: ";
		msg += NumToStr(s);
		msg += "  ";
		TextOut(0, LCD_LINE6, msg, false);

		s = LL_Read(SensorPort, ADDR, LL_READ_RESULT);
		msg = "result: ";
		msg += NumToStr(s);
		msg += "  ";
		TextOut(0, LCD_LINE7, msg, false);
	}

}
